[{"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/index.tsx":"1","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/reportWebVitals.ts":"2","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/App.tsx":"3","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/header/header.component.tsx":"4","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/config-drawer/config-drawer.component.tsx":"5","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/config-drawer/config-drawer.resources.tsx":"6","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/i18n.js":"7","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/search-box/search-box.component.tsx":"8","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/location/location.component.tsx":"9","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/location/location.resources.tsx":"10","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/services/weather.service.ts":"11","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/services/mock.service.ts":"12","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/utils/date.utils.tsx":"13","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/constants/weather-types.tsx":"14","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/weather-detail/weather-detail.component.tsx":"15","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/utils/temperature.utils.tsx":"16","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/weather-detail/weather-detail.resources.tsx":"17","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/cities-list.component.tsx":"18","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/days-list/day-list.component.tsx":"19","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/days-list/day-detail/day-detail.component.tsx":"20","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/city-detail/city-detail.component.tsx":"21","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/footer/footer.component.tsx":"22","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/detail-modal/detail-modal.component.tsx":"23","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/detail-modal/extra-details/extra-details.component.tsx":"24"},{"size":523,"mtime":1610847594294,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1610828435410,"results":"27","hashOfConfig":"26"},{"size":1314,"mtime":1610886664934,"results":"28","hashOfConfig":"26"},{"size":902,"mtime":1610877723707,"results":"29","hashOfConfig":"26"},{"size":2214,"mtime":1610849900478,"results":"30","hashOfConfig":"26"},{"size":747,"mtime":1610847643838,"results":"31","hashOfConfig":"26"},{"size":890,"mtime":1610849249353,"results":"32","hashOfConfig":"26"},{"size":862,"mtime":1610875280363,"results":"33","hashOfConfig":"26"},{"size":3984,"mtime":1610888181143,"results":"34","hashOfConfig":"26"},{"size":56,"mtime":1610857240172,"results":"35","hashOfConfig":"26"},{"size":713,"mtime":1610886364944,"results":"36","hashOfConfig":"26"},{"size":5889,"mtime":1610879877445,"results":"37","hashOfConfig":"26"},{"size":366,"mtime":1610866964229,"results":"38","hashOfConfig":"26"},{"size":964,"mtime":1610867316037,"results":"39","hashOfConfig":"26"},{"size":1047,"mtime":1610884175043,"results":"40","hashOfConfig":"26"},{"size":135,"mtime":1610884175040,"results":"41","hashOfConfig":"26"},{"size":251,"mtime":1610871818247,"results":"42","hashOfConfig":"26"},{"size":2353,"mtime":1610888181146,"results":"43","hashOfConfig":"26"},{"size":842,"mtime":1610881989648,"results":"44","hashOfConfig":"26"},{"size":1137,"mtime":1610884175049,"results":"45","hashOfConfig":"26"},{"size":986,"mtime":1610878405716,"results":"46","hashOfConfig":"26"},{"size":622,"mtime":1610879068353,"results":"47","hashOfConfig":"26"},{"size":3271,"mtime":1610888181140,"results":"48","hashOfConfig":"26"},{"size":1661,"mtime":1610884475967,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"6xo8gu",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/index.tsx",[],["101","102"],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/reportWebVitals.ts",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/App.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/header/header.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/config-drawer/config-drawer.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/config-drawer/config-drawer.resources.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/i18n.js",[],["103","104"],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/search-box/search-box.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/location/location.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/location/location.resources.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/services/weather.service.ts",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/services/mock.service.ts",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/utils/date.utils.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/constants/weather-types.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/weather-detail/weather-detail.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/utils/temperature.utils.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/weather-detail/weather-detail.resources.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/cities-list.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/days-list/day-list.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/days-list/day-detail/day-detail.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/city-detail/city-detail.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/footer/footer.component.tsx",[],"/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/detail-modal/detail-modal.component.tsx",["105"],"import React, {useEffect, useState} from \"react\";\nimport {Button, Modal, Result} from \"antd\";\nimport {Typography} from 'antd';\nimport WeatherDetail from \"../../weather-detail/weather-detail.component\";\nimport {WeatherDetailSize} from \"../../weather-detail/weather-detail.resources\";\nimport DayList from \"../../days-list/day-list.component\";\nimport ExtraDetails from \"./extra-details/extra-details.component\";\nimport {LoadingOutlined} from \"@ant-design/icons/lib\";\nimport {getLocationData} from \"../../../services/weather.service\";\n\nconst {Title} = Typography;\n\ninterface Props {\n    locationId: any,\n    locationName: string,\n    onClose: any\n}\n\nconst DetailModal: React.FC<Props> = ({locationId, locationName, onClose}) => {\n    const [location, setLocation]: any = useState(null);\n    const [hasError, setHasError]: any = useState(false);\n\n    const renderLoading = () => {\n        if ((locationId && location) || hasError ) return null;\n        return (\n            <div className=\"DetailModal__Body\">\n                <LoadingOutlined className=\"DetailModal__Spinner\"/>\n            </div>\n        )\n    }\n    const renderError = () => {\n        if (!hasError) return null;\n        return (\n            <Result\n                status=\"error\"\n                title=\"Can't reach location data\"\n                subTitle=\"Sadly we couldn't get access to the location data, please try again later.\"\n            />\n        )\n    }\n\n    const renderDetails = () => {\n        if(!locationId || !location) return null;\n        const todayWeather = location?.consolidated_weather[0]\n        const {the_temp, weather_state_abbr, min_temp, max_temp, wind_speed, humidity} = todayWeather;\n        return (\n            <div className=\"DetailModal__Body\">\n                <Title level={5}>Today</Title>\n                <WeatherDetail\n                    showImage\n                    temp={the_temp}\n                    tempType={weather_state_abbr}\n                    size={WeatherDetailSize.large}\n                />\n                <ExtraDetails minTemp={min_temp} maxTemp={max_temp} wind={wind_speed} humidity={humidity}/>\n                <DayList days={location?.consolidated_weather} forceMdSize/>\n            </div>\n        )\n    }\n\n\n    const handleClose = () => {\n        setLocation(null);\n        onClose()\n    }\n\n    const getLocation = async () => {\n        try {\n            const location = await getLocationData(locationId)\n            console.log(location);\n            setLocation(location)\n            setHasError(false)\n        } catch (e) {\n            console.log(\"Error\");\n            setHasError(true)\n        }\n\n    }\n\n    useEffect(() => {\n        if (!locationId) return;\n        getLocation();\n\n    }, [getLocation, locationId])\n\n    return (\n        <Modal\n            title={<Title level={4}>{locationName}</Title>}\n            visible={!!locationId}\n            onOk={handleClose}\n            onCancel={handleClose}\n            className=\"DetailModal__Container\"\n            footer={[\n                <Button key=\"back\" onClick={handleClose}>\n                    Close\n                </Button>\n            ]}>\n            {renderDetails()}\n            {renderLoading()}\n            {renderError()}\n        </Modal>\n    )\n};\n\nexport default DetailModal","/Users/miguel/WebstormProjects/EVERLANCE/Everalance-Weather/src/components/cities-list/detail-modal/extra-details/extra-details.component.tsx",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":67,"column":11,"nodeType":"112","endLine":78,"endColumn":6},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"react-hooks/exhaustive-deps","The 'getLocation' function makes the dependencies of useEffect Hook (at line 89) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'getLocation' in its own useCallback() Hook.","VariableDeclarator","no-global-assign","no-unsafe-negation"]